// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Header /> shallow Snapshot matches 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Header />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "bsStyle": "default",
      "children": <NavbarHeader>
        <NavbarBrand>
                <a
                        href="#"
                >
                        Depot
                </a>
        </NavbarBrand>
        <NavbarToggle
                onClick={[Function]}
        />
</NavbarHeader>,
      "fluid": true,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <NavbarBrand>
            <a
                        href="#"
            >
                        Depot
            </a>
</NavbarBrand>,
          <NavbarToggle
            onClick={[Function]}
/>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <a
              href="#"
>
              Depot
</a>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Depot",
              "href": "#",
            },
            "ref": null,
            "rendered": "Depot",
            "type": "a",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "onClick": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "Brand": [Function],
      "Collapse": [Function],
      "ControlledComponent": [Function],
      "Form": [Function],
      "Header": [Function],
      "Link": [Function],
      "STYLES": Array [
        "default",
        "inverse",
      ],
      "Text": [Function],
      "Toggle": [Function],
      "defaultProps": Object {
        "bsStyle": "default",
      },
      "deferControlTo": [Function],
      "propTypes": Object {
        "bsStyle": [Function],
        "defaultExpanded": [Function],
        "expanded": [Function],
        "innerRef": [Function],
      },
      "render": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "bsStyle": "default",
        "children": <NavbarHeader>
          <NavbarBrand>
                    <a
                              href="#"
                    >
                              Depot
                    </a>
          </NavbarBrand>
          <NavbarToggle
                    onClick={[Function]}
          />
</NavbarHeader>,
        "fluid": true,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <NavbarBrand>
              <a
                            href="#"
              >
                            Depot
              </a>
</NavbarBrand>,
            <NavbarToggle
              onClick={[Function]}
/>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <a
                href="#"
>
                Depot
</a>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Depot",
                "href": "#",
              },
              "ref": null,
              "rendered": "Depot",
              "type": "a",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "onClick": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "Brand": [Function],
        "Collapse": [Function],
        "ControlledComponent": [Function],
        "Form": [Function],
        "Header": [Function],
        "Link": [Function],
        "STYLES": Array [
          "default",
          "inverse",
        ],
        "Text": [Function],
        "Toggle": [Function],
        "defaultProps": Object {
          "bsStyle": "default",
        },
        "deferControlTo": [Function],
        "propTypes": Object {
          "bsStyle": [Function],
          "defaultExpanded": [Function],
          "expanded": [Function],
          "innerRef": [Function],
        },
        "render": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
  Symbol(enzyme.__childContext__): null,
}
`;
